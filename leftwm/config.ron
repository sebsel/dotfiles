//  _        ___                                      ___ _
// | |      / __)_                                   / __|_)
// | | ____| |__| |_ _ _ _ ____      ____ ___  ____ | |__ _  ____    ____ ___  ____
// | |/ _  )  __)  _) | | |    \    / ___) _ \|  _ \|  __) |/ _  |  / ___) _ \|  _ \
// | ( (/ /| |  | |_| | | | | | |  ( (__| |_| | | | | |  | ( ( | |_| |  | |_| | | | |
// |_|\____)_|   \___)____|_|_|_|   \____)___/|_| |_|_|  |_|\_|| (_)_|   \___/|_| |_|
// A WindowManager for Adventurers                         (____/
// For info about configuration please visit https://github.com/leftwm/leftwm/wiki

#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
(
    modkey: "Mod4",
    mousekey: "Mod4",
    workspaces: [],
    tags: [
        "dev",
        "web",
        "chat",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
    ],
    max_window_width: None,
    layouts: [
        "MainAndVertStack",
        "MainAndDeck",
        "CenterMain",
        "Monocle",
        "Grid",
        "Fibonacci",
        "EvenHorizontal",
        "EvenVertical",
    ],
    layout_definitions: [
        (name: "EvenHorizontal", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: None, stack: (flip: None, rotate: North, split: Vertical), second_stack: None)),
        (name: "EvenVertical", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: None, stack: (flip: None, rotate: North, split: Horizontal), second_stack: None)),
        (name: "Monocle", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: None, stack: (flip: None, rotate: North, split: None), second_stack: None)),
        (name: "Grid", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: None, stack: (flip: None, rotate: North, split: Grid), second_stack: None)),
        (name: "MainAndVertStack", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: Horizontal), second_stack: None)),
        // (name: "MainAndHorizontalStack", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: Vertical), second_stack: None)),
        // (name: "RightMainAndVertStack", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: South, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: Horizontal), second_stack: None)),
        (name: "Fibonacci", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: Fibonacci), second_stack: None)),
        // (name: "Dwindle", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: Dwindle), second_stack: None)),
        (name: "MainAndDeck", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: None), stack: (flip: None, rotate: North, split: None), second_stack: None)),
        // (name: "CenterMain", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: None), second_stack: (flip: None, rotate: North, split: Horizontal))),
        // (name: "CenterMainBalanced", flip: None, rotate: North, reserve: None, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: Dwindle), second_stack: (flip: None, rotate: North, split: Dwindle))),
        // (name: "CenterMainFluid", flip: None, rotate: North, reserve: Reserve, columns: (flip: None, rotate: North, main: (count: 1, size: 0.5, flip: None, rotate: North, split: Vertical), stack: (flip: None, rotate: North, split: None), second_stack: (flip: None, rotate: North, split: Horizontal))),
    ],
    layout_mode: Tag,
    insert_behavior: Bottom,
    scratchpad: [
        (name: "Alacritty", value: "alacritty", x: 860, y: 390, height: 300, width: 200),
    ],
    window_rules: [
        (window_class: "Alacritty", spawn_on_tag: 1),
        (window_class: "Navigator", spawn_on_tag: 2),
        (window_class: "firefox", spawn_on_tag: 2),
        (window_class: "Whatsapp", spawn_on_tag: 3),
        (window_class: "TelegramDesktop", spawn_on_tag: 3),
    ],
    disable_current_tag_swap: true,
    disable_tile_drag: false,
    disable_window_snap: true,
    focus_behaviour: Sloppy,
    focus_new_windows: true,
    single_window_border: true,
    sloppy_mouse_follows_focus: true,
    create_follows_cursor: None,
    auto_derive_workspaces: true,
    disable_cursor_reposition_on_resize: false,
    keybind: [
        // Launchers
        (command: Execute, value: "rofi -show drun",   modifier: ["modkey"], key: "Return"),
        (command: Execute, value: "rofi -show drun",   modifier: ["modkey"], key: "p"),
        (command: Execute, value: "rofi -show run",    modifier: ["modkey", "Shift"], key: "p"),
        (command: Execute, value: "rofi -show calc -modi calc -no-show-match -no-sort",    modifier: ["modkey", "Control"], key: "p"),
        (command: Execute, value: "rofi -show window", modifier: ["modkey"], key: "e"),
        (command: Execute, value: "rofi -show emoji -modi emoji",  modifier: ["modkey", "Shift"], key: "e"),
        (command: Execute, value: "alacritty", modifier: ["modkey", "Shift"], key: "Return"),

        // Window statuses
        (command: CloseWindow, modifier: ["modkey"], key: "q"),
        (command: ToggleFloating, modifier: ["modkey", "Control"], key: "f"),
        (command: ToggleFullScreen, modifier: ["modkey"], key: "f"),

        // Locking and reloading
        (command: SoftReload, value: "", modifier: ["modkey", "Shift"], key: "r"),
        (command: HardReload, value: "", modifier: ["modkey", "Shift", "Control"], key: "r"),
        (command: Execute, value: "loginctl kill-session $XDG_SESSION_ID", modifier: ["modkey", "Control", "Shift"], key: "q"),
        (command: Execute, value: "slock", modifier: ["modkey", "Control"], key: "q"),

        // Focus
        (command: FocusWorkspacePrevious, modifier: ["modkey"], key: "h"),
        (command: FocusWindowDown,        modifier: ["modkey"], key: "j"),
        (command: FocusWindowUp,          modifier: ["modkey"], key: "k"),
        (command: FocusWorkspaceNext,     modifier: ["modkey"], key: "l"),

        // Nativation
        (command: ReturnToLastTag, modifier: ["modkey"], key: "Escape"),
        (command: GotoTag, value: "1", modifier: ["modkey"], key: "1"),
        (command: GotoTag, value: "2", modifier: ["modkey"], key: "2"),
        (command: GotoTag, value: "3", modifier: ["modkey"], key: "3"),
        (command: GotoTag, value: "4", modifier: ["modkey"], key: "4"),
        (command: GotoTag, value: "5", modifier: ["modkey"], key: "5"),
        (command: GotoTag, value: "6", modifier: ["modkey"], key: "6"),
        (command: GotoTag, value: "7", modifier: ["modkey"], key: "7"),
        (command: GotoTag, value: "8", modifier: ["modkey"], key: "8"),
        (command: GotoTag, value: "9", modifier: ["modkey"], key: "9"),

        // Assignment
        (command: MoveWindowTop,         modifier: ["modkey", "Shift"], key: "h"),
        (command: MoveWindowDown,        modifier: ["modkey", "Shift"], key: "j"),
        (command: MoveWindowUp,          modifier: ["modkey", "Shift"], key: "k"),
        (command: MoveWindowToNextWorkspace, modifier: ["modkey", "Shift"], key: "l"),
        (command: MoveToTag, value: "1", modifier: ["modkey", "Shift"], key: "1"),
        (command: MoveToTag, value: "2", modifier: ["modkey", "Shift"], key: "2"),
        (command: MoveToTag, value: "3", modifier: ["modkey", "Shift"], key: "3"),
        (command: MoveToTag, value: "4", modifier: ["modkey", "Shift"], key: "4"),
        (command: MoveToTag, value: "5", modifier: ["modkey", "Shift"], key: "5"),
        (command: MoveToTag, value: "6", modifier: ["modkey", "Shift"], key: "6"),
        (command: MoveToTag, value: "7", modifier: ["modkey", "Shift"], key: "7"),
        (command: MoveToTag, value: "8", modifier: ["modkey", "Shift"], key: "8"),
        (command: MoveToTag, value: "9", modifier: ["modkey", "Shift"], key: "9"),

        // Layouts
        (command: DecreaseMainWidth, modifier: ["modkey", "Control"], key: "h"),
        (command: PreviousLayout,    modifier: ["modkey", "Control"], key: "k"),
        (command: NextLayout,        modifier: ["modkey", "Control"], key: "j"),
        (command: IncreaseMainWidth, modifier: ["modkey", "Control"], key: "l"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "1", value: "Monocle"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "2", value: "MainAndVertStack"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "3", value: "CenterMain"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "4", value: "MainAndDeck"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "5", value: "Grid"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "6", value: "Fibonacci"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "7", value: "EvenHorizontal"),
        (command: SetLayout, modifier: ["modkey", "Control"], key: "8", value: "EvenVertical"),
        (command: RotateTag, modifier: ["modkey", "Control"], key: "9"),

        // Media
        (command: Execute, value: "amixer -q sset Master toggle", modifier: [], key: "XF86XK_AudioMute"),
        (command: Execute, value: "amixer -q sset Master 5%+", modifier: [], key: "XF86XK_AudioRaiseVolume"),
        (command: Execute, value: "amixer -q sset Master 5%-", modifier: [], key: "XF86XK_AudioLowerVolume"),

    ],
    state_path: None,
)

// vim: syntax=rust
